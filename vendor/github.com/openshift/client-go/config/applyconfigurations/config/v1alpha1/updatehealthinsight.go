// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// UpdateHealthInsightApplyConfiguration represents an declarative configuration of the UpdateHealthInsight type for use
// with apply.
type UpdateHealthInsightApplyConfiguration struct {
	StartedAt   *v1.Time                                    `json:"startedAt,omitempty"`
	Scope       *UpdateInsightScopeApplyConfiguration       `json:"scope,omitempty"`
	Impact      *UpdateInsightImpactApplyConfiguration      `json:"impact,omitempty"`
	Remediation *UpdateInsightRemediationApplyConfiguration `json:"remediation,omitempty"`
}

// UpdateHealthInsightApplyConfiguration constructs an declarative configuration of the UpdateHealthInsight type for use with
// apply.
func UpdateHealthInsight() *UpdateHealthInsightApplyConfiguration {
	return &UpdateHealthInsightApplyConfiguration{}
}

// WithStartedAt sets the StartedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartedAt field is set to the value of the last call.
func (b *UpdateHealthInsightApplyConfiguration) WithStartedAt(value v1.Time) *UpdateHealthInsightApplyConfiguration {
	b.StartedAt = &value
	return b
}

// WithScope sets the Scope field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Scope field is set to the value of the last call.
func (b *UpdateHealthInsightApplyConfiguration) WithScope(value *UpdateInsightScopeApplyConfiguration) *UpdateHealthInsightApplyConfiguration {
	b.Scope = value
	return b
}

// WithImpact sets the Impact field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Impact field is set to the value of the last call.
func (b *UpdateHealthInsightApplyConfiguration) WithImpact(value *UpdateInsightImpactApplyConfiguration) *UpdateHealthInsightApplyConfiguration {
	b.Impact = value
	return b
}

// WithRemediation sets the Remediation field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Remediation field is set to the value of the last call.
func (b *UpdateHealthInsightApplyConfiguration) WithRemediation(value *UpdateInsightRemediationApplyConfiguration) *UpdateHealthInsightApplyConfiguration {
	b.Remediation = value
	return b
}
