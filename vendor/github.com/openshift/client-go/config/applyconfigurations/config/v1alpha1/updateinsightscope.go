// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/api/config/v1alpha1"
)

// UpdateInsightScopeApplyConfiguration represents an declarative configuration of the UpdateInsightScope type for use
// with apply.
type UpdateInsightScopeApplyConfiguration struct {
	Type      *v1alpha1.ScopeType             `json:"type,omitempty"`
	Resources []ResourceRefApplyConfiguration `json:"resources,omitempty"`
}

// UpdateInsightScopeApplyConfiguration constructs an declarative configuration of the UpdateInsightScope type for use with
// apply.
func UpdateInsightScope() *UpdateInsightScopeApplyConfiguration {
	return &UpdateInsightScopeApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *UpdateInsightScopeApplyConfiguration) WithType(value v1alpha1.ScopeType) *UpdateInsightScopeApplyConfiguration {
	b.Type = &value
	return b
}

// WithResources adds the given value to the Resources field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Resources field.
func (b *UpdateInsightScopeApplyConfiguration) WithResources(values ...*ResourceRefApplyConfiguration) *UpdateInsightScopeApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithResources")
		}
		b.Resources = append(b.Resources, *values[i])
	}
	return b
}
