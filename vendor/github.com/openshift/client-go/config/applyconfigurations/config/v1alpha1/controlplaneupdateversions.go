// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ControlPlaneUpdateVersionsApplyConfiguration represents an declarative configuration of the ControlPlaneUpdateVersions type for use
// with apply.
type ControlPlaneUpdateVersionsApplyConfiguration struct {
	Previous          *string `json:"previous,omitempty"`
	IsPreviousPartial *bool   `json:"previousPartial,omitempty"`
	Target            *string `json:"target,omitempty"`
	IsTargetInstall   *bool   `json:"targetInstall,omitempty"`
}

// ControlPlaneUpdateVersionsApplyConfiguration constructs an declarative configuration of the ControlPlaneUpdateVersions type for use with
// apply.
func ControlPlaneUpdateVersions() *ControlPlaneUpdateVersionsApplyConfiguration {
	return &ControlPlaneUpdateVersionsApplyConfiguration{}
}

// WithPrevious sets the Previous field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Previous field is set to the value of the last call.
func (b *ControlPlaneUpdateVersionsApplyConfiguration) WithPrevious(value string) *ControlPlaneUpdateVersionsApplyConfiguration {
	b.Previous = &value
	return b
}

// WithIsPreviousPartial sets the IsPreviousPartial field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IsPreviousPartial field is set to the value of the last call.
func (b *ControlPlaneUpdateVersionsApplyConfiguration) WithIsPreviousPartial(value bool) *ControlPlaneUpdateVersionsApplyConfiguration {
	b.IsPreviousPartial = &value
	return b
}

// WithTarget sets the Target field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Target field is set to the value of the last call.
func (b *ControlPlaneUpdateVersionsApplyConfiguration) WithTarget(value string) *ControlPlaneUpdateVersionsApplyConfiguration {
	b.Target = &value
	return b
}

// WithIsTargetInstall sets the IsTargetInstall field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IsTargetInstall field is set to the value of the last call.
func (b *ControlPlaneUpdateVersionsApplyConfiguration) WithIsTargetInstall(value bool) *ControlPlaneUpdateVersionsApplyConfiguration {
	b.IsTargetInstall = &value
	return b
}
