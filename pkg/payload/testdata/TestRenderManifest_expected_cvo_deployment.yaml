apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-version-operator
  namespace: openshift-cluster-version
  annotations:
    kubernetes.io/description: The cluster-version operator manages OpenShift updates and reconciles core resources and cluster operators.
    exclude.release.openshift.io/internal-openshift-hosted: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
spec:
  selector:
    matchLabels:
      k8s-app: cluster-version-operator
  strategy:
    type: Recreate
  template:
    metadata:
      name: cluster-version-operator
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        openshift.io/required-scc: hostaccess
      labels:
        k8s-app: cluster-version-operator
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --logtostderr
        - --secure-listen-address=[$(IP)]:9099
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - --upstream=http://127.0.0.1:9099/
        - --tls-cert-file=/etc/tls/serving-cert/tls.crt
        - --tls-private-key-file=/etc/tls/serving-cert/tls.key
        - --client-ca-file=/etc/tls/service-ca/client-ca.crt
        - --config-file=/etc/kube-rbac-proxy/config.yaml
        env:
        - name: IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: quay.io/brancz/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 9099
          hostPort: 9099
          name: metrics
        resources:
          requests:
            cpu: 1m
            memory: 15Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/tls/serving-cert
          name: serving-cert
          readOnly: false
        - mountPath: /etc/tls/service-ca
          name: service-ca
          readOnly: false
        - mountPath: /etc/kube-rbac-proxy
          name: secret-kube-rbac-proxy-metric
          readOnly: true
      - name: cluster-version-operator
        image: 'quay.io/cvo/release:latest'
        imagePullPolicy: IfNotPresent
        args:
        - "start"
        - "--release-image=quay.io/cvo/release:latest"
        - "--enable-auto-update=false"
        - "--listen=127.0.0.1:9099"
        - "--v=2"
        - "--always-enable-capabilities=Ingress"
        resources:
          requests:
            cpu: 20m
            memory: 50Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: etc-ssl-certs
          readOnly: true
        - mountPath: /etc/cvo/updatepayloads
          name: etc-cvo-updatepayloads
          readOnly: true
        - mountPath: /etc/tls/service-ca
          name: service-ca
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        env:
        # Unfortunately the placeholder is not replaced, reported as OCPBUGS-30080
        - name: OPERATOR_IMAGE_VERSION
          value: "0.0.1-snapshot"
        - name: KUBERNETES_SERVICE_PORT  # allows CVO to communicate with apiserver directly on same host.  Is substituted with port from infrastructures.status.apiServerInternalURL if available.
          value: "6443"
        - name: KUBERNETES_SERVICE_HOST  # allows CVO to communicate with apiserver directly on same host.  Is substituted with hostname from infrastructures.status.apiServerInternalURL if available.
          value: "127.0.0.1"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CLUSTER_PROFILE
          value: 'some-profile'
      # this pod is hostNetwork and uses the internal LB DNS name when possible, which the kubelet also uses.
      # this dnsPolicy allows us to use the same dnsConfig as the kubelet, without access to read it ourselves.
      dnsPolicy: Default
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/master: ""
      priorityClassName: "system-cluster-critical"
      terminationGracePeriodSeconds: 130
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: Exists
        effect: "NoSchedule"
      - key: "node.kubernetes.io/network-unavailable"
        operator: Exists
        effect: "NoSchedule"
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 120
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 120
      volumes:
      - name: secret-kube-rbac-proxy-metric
        secret:
          secretName: openshift-cluster-version-kube-rbac-proxy-metric
      - name: etc-ssl-certs
        hostPath:
          path: /etc/ssl/certs
      - name: etc-cvo-updatepayloads
        hostPath:
          path: /etc/cvo/updatepayloads
      - name: serving-cert
        secret:
          secretName: cluster-version-operator-serving-cert
      - name: service-ca
        configMap:
          name: openshift-service-ca.crt
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3600
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
